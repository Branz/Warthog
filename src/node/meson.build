src= [
  './api/http/endpoint.cpp',
  './api/http/json.cpp',
  './api/http/parse.cpp',
  './api/interface.cpp',
  './api/stratum/stratum_server.cpp',
  './api/types/all.cpp',
  './block/body/generator.cpp',
  './block/body/primitives.cpp',
  './block/chain/consensus_headers.cpp',
  './block/chain/fork_range.cpp',
  './block/chain/header_chain.cpp',
  './block/chain/history/history.cpp',
  './block/chain/pin.cpp',
  './block/chain/range.cpp',
  './block/chain/signed_snapshot.cpp',
  './block/chain/state.cpp',
  './block/header/batch.cpp',
  './block/header/shared_batch.cpp',
  './block/header/timestamprule.cpp',
  './chainserver/account_cache.cpp',
  './chainserver/db/chain_db.cpp',
  './chainserver/mining_subscription.cpp',
  './chainserver/server.cpp',
  './chainserver/state/helpers/consensus.cpp',
  './chainserver/state/helpers/past_chains.cpp',
  './chainserver/state/state.cpp',
  './chainserver/state/transactions/apply_stage.cpp',
  './chainserver/state/transactions/block_applier.cpp',
  './cmdline/cmdline.cpp',
  './communication/buffers/recvbuffer.cpp',
  './communication/buffers/sndbuffer.cpp',
  './communication/messages.cpp',
  './config/config.cpp',
  './eventloop/address_manager/address_manager.cpp',
  './eventloop/address_manager/connection_schedule.cpp',
  './eventloop/address_manager/flat_address_set.cpp',
  './eventloop/chain_cache.cpp',
  './eventloop/timer_element.cpp',
  './eventloop/eventloop.cpp',
  './eventloop/peer_chain.cpp',
  './eventloop/sync/block_download/attorney.cpp',
  './eventloop/sync/block_download/block_download.cpp',
  './eventloop/sync/block_download/connection_data.cpp',
  './eventloop/sync/block_download/focus.cpp',
  './eventloop/sync/block_download/forks.cpp',
  './eventloop/sync/block_download/stage_state.cpp',
  './eventloop/sync/header_download/connection_data.cpp',
  './eventloop/sync/header_download/header_download.cpp',
  './eventloop/sync/header_download/probe_balanced.cpp',
  './eventloop/timer.cpp',
  './eventloop/types/chainstate.cpp',
  './eventloop/types/conndata.cpp',
  './transport/helpers/tcp_sockaddr.cpp',
  './global/globals.cpp',
  './mempool/mempool.cpp',
  './mempool/subscription.cpp',
  './mempool/txmap.cpp',
  './peerserver/ban_cache.cpp',
  './peerserver/db/peer_db.cpp',
  './peerserver/peerserver.cpp',
  './transport/tcp/connect_request.cpp',
  './transport/connection_base.cpp',
  './transport/helpers/ipv4.cpp',
  './transport/helpers/per_ip_counter.cpp',
  './transport/helpers/socket_addr.cpp',
  './transport/tcp/start_connection.cpp',
  './transport/tcp/conman.cpp',
  './transport/tcp/connection.cpp',
  src_sqlitecpp,
  src_wh,
]

include_thirdparty=[include_trezorcrypto,include_wh,include_secp256k1,include_sqlitecpp, include_spdlog,include_usockets,include_uwebsockets,include_json,include_tomlplusplus, include_tl]
lib_thirdparty=[libsecp256k1, libusockets]
executable('wart-node', vcs_dep, [src,'./main.cpp', src_spdlog],
  include_directories:['./' ,include_thirdparty],
  link_with: lib_thirdparty,
  dependencies: [sqlite3_dep,libuv_dep,uvw_dep],
  install : true)

